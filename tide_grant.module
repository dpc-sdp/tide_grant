<?php

/**
 * @file
 * Tide Grant module functionality.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_BASE_FORM_ID_alter().
 */
function tide_grant_form_node_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form["#validate"][] = '_tide_grant_validate_grant_dates';
  // Manipulate Guidelines fields on node add.
  if ($form_id == 'node_grant_form') {
    $form['field_node_guidelines']['widget'][0]['subform']['field_paragraph_title']['widget'][0]['value']['#default_value'] = t('Guidelines');
    $form['field_node_guidelines']['widget'][0]['subform']['field_paragraph_title']['widget'][0]['value']['#required'] = TRUE;
    // Lookup our preset values from config.
    if ($config = \Drupal::config('tide_grant.settings')->get('guidelines')) {
      foreach ($config as $key => $value) {
        if ($element = &$form['field_node_guidelines']['widget'][0]['subform']['field_paragraph_accordion']['widget'][$key]) {
          $element['subform']['field_paragraph_accordion_name']['widget'][0]['value']['#default_value'] = $value;
        }
      }
    }
  }
}

/**
 * Custom validation function for Grant dates.
 *
 * @param array $form
 *   Form elements.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   Form state.
 */
function _tide_grant_validate_grant_dates(array &$form, FormStateInterface $form_state) {
  $on_going = $form_state->getValue('field_node_on_going');
  $dates = $form_state->getValue('field_node_dates');
  $start_date = !empty($dates) ? $dates[0]["value"] : '';
  $end_date = !empty($dates) ? $dates[0]["end_value"] : '';
  $messenger = \Drupal::messenger();
  if ((empty($start_date) || empty($end_date)) && $on_going['value'] === 0) {
    $form_state->setError($form["field_node_dates"]["widget"][0]["value"], t('Start date is required'));
    $form_state->setError($form["field_node_dates"]["widget"][0]["end_value"], t('End date is required'));
    $messenger->addError(t('Add Grant dates or select on-going.'));
  }
}
